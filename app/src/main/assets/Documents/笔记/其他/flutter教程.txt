flutter
flutter 的特点
1）跨平台linux，Android，iOS，Fuchsia
2）每秒传输帧数高120，RN最高是60.
3）
4）
5）
6）

01.小知识汇总
在dart语言中使用下划线前缀标识符，会强制其编程私有的。
MissingPluginException clean一下，重启app就好

第二章 布局 widget
01.拥有单个子元素的布局widget
01）Container：添加 padding，margin，borders边框，background，填充；
02）Padding：给子widget绘制内间距
03）Center：子widget居中显示
04）Align ：对齐方式
05）FittedBox：按自己的大小调整子widget的大小位置。
06）AspectRatio：将子Widget的大小指定为特定的长宽比。
07）ConstrainedBox：对子Widget附加约束。
08）Baseline：根据子项的基线对他们的位置进行定位的widget。
09）FractionallySizeBox：把它的子项放在可用空间的一小部分。
10）IntrinsicHeight：将他的子项的高度调整其本身实际的高度。
11）IntrinsicWidth：将他的子项的高度调整其本身实际的宽度。
12）LimitedBox：一个当自身不受约束是才显示其大小的盒子。
13）Offstage：可以控制子项的显示和隐藏。
14）OverflowBox：对子项施加不同约束的widget，允许子项溢出父级。
15）SizedBox：指定宽高，如为空则调整自身以适配子项。
16）SizedOberflowBox：指定宽高大小，可能会溢出。
17）Transform：在绘制子项之前应用转换的widget。
18）CustomSingleChildLayout：一个自定义的拥有单个子widget的布局widget

02.拥有多个子元素的布局 widget
01）Row：一行。
02）Column：一列。
03）Stack：子项堆叠在一起。
04）IndexedStack：从一个字widget列表中显示单个孩子的Stack。
05）Flow：一个实现流失布局算法的widget。
06）Table：为其子widget使用表格布局算法的widget。
07）Wrap：可以在水平或垂直方向多行显示其子widget。
08）ListBody：沿着一个给定的轴，顺序排列他的子元素。
09）ListView：可滚动的列表控件。
10）CustomMultiChildLayout：使用一个委托来对多个孩子进行设置大小和定位的小部件
11）GridView；网格布局；
其他布局：
12）Card：将相关内容放到带圆角和投影的盒子中。
13）ListTile：将最多三行文字，以及可选的行前和行尾的图标排成一行。
14）LayoutBuilder：构建一个可以依赖父窗口大小的widget树。

03.动画处理：AnimationController和Interpolator。

04.生命周期：
1）resume的：应用程序可见并响应用户输入。这是来自Android的onResume
2）inactive：应用程序处于非活动状态，并且未接受用户输入。此事件在Android上未使用，仅适用于iOS。
3）pause的：应用程序当前对用户不可见，不响应用户输入，并在后台运行。对应Android的onPause。
4）suspending：该应用程序将暂停终止。这在iOS上未使用。

05.GestureDetector：
1）onTapDown：点击按下
2）onTapUp：点击抬起
3）onTap：点击事件
4）onTapCancel：点击事件取消
5）onDoubleTap：双击
6）onLongPress：单击
垂直（上下）拖动
7）onVerticalDragStart：
8）onVerticalDragStart：
9）onVerticalDragEnd：
水平拖动
10）onHorizontalDragStart：
11）onHorizontalDragUpdate：
12）onHorizontalDragEnd：

06.TextStyle的属性；
1）color
2）backgroundColor
3）fontSize
4）fontWeight
5）fontStyle
6）letterSpacing
7）wordSpacing
8）textBaseline
9）height
10）locale
11）foreground
12）background
13）shadows
14）fontFeatures
15）decoration
16）decorationColor
17）decorationStyle
18）decorationThickness
19）debugLabel

07.TextField的属性；
01）controller
02）focusNode
03）decoration
04）textInputAction
05）textCapitalization
06）style
07）strutStyle
08）textAlign
09）textAlignVertical
10）textDirection
11）readOnly
12）showCursor
13）autoFocus
14）obscureText
15）autocorrect
16）maxLines
17）minLines
18）expands
19）maxLength
20）maxLengthEnforced
21）onChanged
22）onEditingComplete
23）onSubmitted
24）inputFormatters
25）enabled
26）cursorWidth
27）cursorRadius
28）cursorColor
29）keyboardAppearance
30）scrollPadding
31）dragStartBehavior
32）enableInteractiveSelection
33）onTap
34）buildCounter
35）scrollController
36）scrollPhysics
37）
38）

08.InputDecoration的属性；
1）icon
2）labelText
3）labelStyle
4）helperText
5）helperStyle
6）hintText
7）hintStyle
8）hintMaxLines
9）errorText
10）errorStyle
11）errorMaxLines
12）isDese
13）contentPadding
14）prefixIcon
15）prefix
16）prefixText
17）prefixStyle
18）suffixIcon
19）suffix
20）suffixText
21）suffixStyle
22）counter
23）counterText
24）counterStyle
25）filled
26）fillColor
27）focusColor
28）hoverColor
29）errorBorder
30）focusedBorder
31）focusedErrorBorder
32）disabledBorder
33）enabledBorder
34）border
35）enable
36）semanticCounterText
37）alignLabelWithHint
38）hasFloatingPlaceholder

09.scaffold的属性；
01）appBar：标题栏
02）body：主要内容
03）floatingActionButton；fab按钮
04）floatingActionButtonLocation：fab位置
05）floatingActionButtonAnimator：fab动画
06）PersistentFooterButtons：底部按钮集合
07）drawer：左侧侧边栏控件
08）endDrawer：右侧侧边栏
09）bottomNavigationBar：底部栏
10）bottomSheet：
11）backgroundColor：背景色
12）resizeToAvoidBottonPadding：
13）resizeToAvoidBottonInset：
14）primary：
15）drawerDragStartBehavior：
16）extendBody：
17）drawerScrimColor：
18）drawerEdgeDragWidth：

10.Row的属性：一行
1）mainAxisAlignment：水平方向X轴是主方向
2）mainAxisSize：主轴方向占有的空间，默认为max，还可以设成min
3）CrossAxisAlignment：竖直方向Y轴是副方向
4）textdirection：阿拉伯语系的兼容处理，国内肯定不用管。
5）verticalDirection：children的摆放顺序，默认down，为顺序，从上到下；up是逆序，从下到上。
6）textBaseline：文本基线，不用管。

11.Cloumn的属性：一列，与Row基本相同
1）mainAxisAlignment：垂直方向Y轴是主方向
2）CrossAxisAlignment：水平方向X轴是副方向

12.container的属性：
01）alignment：对齐方式
02）padding：内边距
03）color：背景色
04）decoration：背景图
05）foregroundDecoration：前景图遮罩
06）width：
07）height：
08）constraints：宽高的约束条件
09）margin：外边距
10）transform：
11）child：

13.ListTile的属性：
1）title：标题
2）subtitle：副标题
3）dense：ListTile整体缩小
4）leading：头部图标
5）trailing：尾部图标
6）contntPadding：内容边距，默认16.
7）selected：选中状态，会设成主题颜色
8）enabled：是否可点击
9）onTap：点击事件
10）onLongPress：长按
11）isThreeLine：默认高度最小为3行，

14.RefreshIndicator 属性
1）child：子view
2）displacement：触发下拉的距离
3）onRefresh：刷新的回调
4）color：进度指示器颜色，默认系统颜色
5）backgroundColor：背景色
6）notificationPredicate：默认的通知

15.Image
1）支持gif，网络，缓存，可以有缓存条
2）

16.divider的属性
1）indent: 起点缩进距离
2）endIndent: 终点缩进距离
3）color: 分割线颜色
4）height: 分割线区域的高度，并非分割线的高度
5）thickness: 分割线的厚度，真正的分割线的高度
6）注意:
    1.当height为null的时候会去查看 DividerThemeData.space的高度，如果同样为null，则默认分割线区间为16
    2.如果不设置thickness的高度，分割线默认为1px且居中显示
    3.如果想设置真实的分割线高度，需要把height和thickness设置为一样高即可。
    4.flutter还提供了竖直方向上的分割线组件VerticalDivider,用法一至，不在赘述。

17.
01）
02）
03）
04）
05）
06）